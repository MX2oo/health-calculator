name: CI Pipeline

on:
  push:
    branches:
      - master  # Exécute le workflow sur les pushs vers la branche "main"
  pull_request:
    branches:
      - master  # Exécute le workflow sur les pull requests vers "main"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupérer le code du dépôt
    - name: Checkout code
      uses: actions/checkout@v2

    # Étape 2 : Configurer Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    # Étape 3 : Installer les dépendances
    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    # Étape 4 : Lancer les tests unitaires
    - name: Run tests
      run: |
        source .venv/bin/activate
        python -m unittest discover -s . -p "*.py"

    # Étape 5 : Construire l'image Docker
    - name: Build Docker image
      run: |
        docker build -t health-calculator .

    # Étape 6 : Lancer un conteneur Docker
    - name: Run Docker container
      run: |
        docker run -d --name health-calculator-container -p 5001:5001 health-calculator

    # Étape 7 : Vérifier que le conteneur s'exécute
    - name: Check Docker container
      run: |
        docker ps | grep health-calculator-container

    # Étape 8 : Nettoyer le conteneur
    - name: Stop and clean up Docker container
      run: |
        docker stop health-calculator-container
        docker rm health-calculator-container
